@startuml

namespace DSED_M01_Fichiers_Texte {
    class Program {
        {static} Main(args:string[]) : void
    }
}

DSED_M01_Fichiers_Texte ..> M01_DAL_Import_Munic_JSON
DSED_M01_Fichiers_Texte ..> M01_DAL_Import_Munic_CSV
DSED_M01_Fichiers_Texte ..> M01_DAL_Municipalite_MySQL
DSED_M01_Fichiers_Texte ..> M01_Srv_Municipalite

namespace M01_Srv_Municipalite {
    class Municipalite {
        + CodeGeographique : int <<get>> <<set>>
        + NomMunicipalite : string <<get>> <<set>>
        + AdresseCourriel : string <<get>> <<set>>
        + AdresseWeb : string <<get>> <<set>>
        + DateProchaineElection : datetime? <<get>> <<set>>
        + Actif : bool <<get>> <<set>>
        + <<override>> Equals(obj:object) : bool
        + <<override>> GetHashCode() : int
    }
    interface IDepotMunicipalites {
        + ChercherMunicipaliteParCodeGeographique(p_codeGeographique:int) : Municipalite
        + ListerMunicipalitesActives() : IEnumerable<Municipalite>
        + DesactiverMunicipalite(p_municipalite:Municipalite) : void
        + AjouterMunicipalite(p_municipalite:Municipalite) : void
        + MAJMunicipalite(p_municipalite:Municipalite) : void
    }
    class StatistiquesImportationDonnees {
        + NombreEnregistrementsAjoutes : int <<get>> <<set>>
        + NombreEnregistrementsModifies : int <<get>> <<set>>
        + NombreEnregistrementsDesactives : int <<get>> <<set>>
        + NombreEnregistrementsNonModifies : int <<get>> <<set>>
        + NombreMunicipalitesImportees : int <<get>> <<set>>
        + <<override>> ToString() : string
    }
    interface IDepotImportationMunicipalites {
        LireMunicipalites() : IEnumerable<Municipalite>
    }
    class TraitementImporterDonneesMunicipalite {
        + TraitementImporterDonneesMunicipalite(p_depotImportationMunicipalites:IDepotImportationMunicipalites, p_depotMunicipalites:IDepotMunicipalites)
        + Executer() : StatistiquesImportationDonnees
    }
}

namespace M01_DAL_Import_Munic_CSV {
    class DepotImportationMunicipaliteCSV {
        + DepotImportationMunicipaliteCSV(p_nomFichierAImporter:string)
        + LireMunicipalites() : IEnumerable<Municipalite>
    }
    M01_Srv_Municipalite.IDepotImportationMunicipalites <|-down- DepotImportationMunicipaliteCSV
}

namespace M01_DAL_Import_Munic_JSON {
    class DepotImportationMunicipaliteJSON {
        + DepotImportationMunicipaliteJSON(p_nomFichierAImporter:string)
        + LireMunicipalites() : IEnumerable<Municipalite>
    }
    M01_Srv_Municipalite.IDepotImportationMunicipalites <|-down- DepotImportationMunicipaliteJSON
}

namespace M01_DAL_Municipalite_MySQL {
    class DepotMunicipalitesMySQL {
        + DepotMunicipalitesMySQL(p_contexte:MunicipaliteContextMySQL)
        + AjouterMunicipalite(p_municipalite:M01_Srv_Municipalite.Municipalite) : void
        + ChercherMunicipaliteParCodeGeographique(p_codeGeographique:int) : M01_Srv_Municipalite.Municipalite
        + DesactiverMunicipalite(p_municipalite:M01_Srv_Municipalite.Municipalite) : void
        + ListerMunicipalitesActives() : IEnumerable<M01_Srv_Municipalite.Municipalite>
        + MAJMunicipalite(p_municipalite:M01_Srv_Municipalite.Municipalite) : void
    }

    M01_Srv_Municipalite.IDepotMunicipalites <|-down- DepotMunicipalitesMySQL

    class Municipalite {
        + MunicipaliteId : int <<get>> <<set>>
        + NomMunicipalite : string <<get>> <<set>>
        + AdresseCourriel : string <<get>> <<set>>
        + AdresseWeb : string <<get>> <<set>>
        + DateProchaineElection : datetime? <<get>> <<set>>
        + Actif : bool <<get>> <<set>>
        + Municipalite()
        + Municipalite(p_municipalite:srvm.Municipalite)
        + VersEntite() : srvm.Municipalite
    }
    class MunicipaliteContextMySQL {
        + MunicipaliteContextMySQL(options:DbContextOptions<MunicipaliteContextMySQL>)
    }

    System.Data.Entity.DbContext <|-- MunicipaliteContextMySQL
}

M01_Srv_Municipalite <.down. M01_DAL_Import_Munic_CSV
M01_Srv_Municipalite <.down. M01_DAL_Import_Munic_JSON
M01_Srv_Municipalite <.down. M01_DAL_Municipalite_MySQL


@enduml
